任务:
	按照设计图实现效果。

任务注意事项
    思考不同情况下（如灰色高度是根据内容动态变化的）水平垂直居中的解决方案。
    动手试一试各种情况的组合，父元素和子元素分别取不同的 position 值。思考 position 属性各种取值的真正含义，尤其是 absolute 究竟是相对谁而言的。
    注意测试不同情况，尤其是极端情况下的效果。
    调节浏览器宽度，灰色元素始终水平居中。
    调节浏览器高度，灰色元素始终垂直居中。
    调节浏览器高度和宽度，黄色扇形的定位始终准确。
    其他效果图中给出的标识均被正确地实现，错一项扣一分。

任务分析：
	该任务主要考察对于水平和垂直居中的实现。那么要实现这样的东西就需要理解css中的定位属性。
	一.CSS布局
		一个元素在页面中一般有4种状态，普通文档流（默认值）， 使用了float的浮动， 以及 relative或者absoult的定位, 相对于浏览器的flexd。
		CSS定位只要依靠position属性实现。
		该属性有四个值:
			float:设置元素浮动， 	该元素将脱离普通文档流。知道外边缘或者另一个浮动块的边缘。
			注意，浮动对于普通流元素会形成一个挤压的状态， 比如<a></a><div></div> 这样一个布局， 
			如果设置div元素浮动，那么a元素就会被挤压到div元素的后面去。
			同时，float元素的尺寸讲不会计入父元素的尺寸中， 所以， 这里就涉及到一个清除浮动的概念：
			清楚浮动的几种做法：
				1.父元素设置ovflow:hidden;
				2.在需要清除浮动的底部加一个div标签， 同时，将这个标签clear:both;
				3.使用伪类清楚浮动：在父元素上添加一个clear类 同时，讲该类设置成：{
				    clear: both;
   					content: " ";
   					display: block;
   					height: 0;
   					visibility: hidden;
				}
			position:
				1.ralative 相对定位， 原有位置不脱离普通文档流，相对自己原有的位置进行定位。
				2.absolute 绝对定位， 脱离原有定位，相对于祖先中，已经定位的元素（相对和绝对）进行定位
			flexd:相对于浏览器定位， 不会随着滚动条滚动。
			z-index: 对于relatvie absolute fixed 可以设置堆叠顺序。 值越大越在上面。
	二.CSS中水平和垂直居中
		1.水平居中：
			1)行框： 只需要在父级元素中设置 text-align:center;
			2)块级框：父级元素 margin:0 aoto;
		2.垂直居中：
			1)行框：一般设置子元素 height 和 line-height一致就可以实现。
			2)块级框:
				a)知道height ：子元素设置为
									position: absolute;
									top: 50%; 
									height: 100px; 
									margin-top: -50px;
				b)不知道height:子元素设置为：
								    position: absolute;
 								    top: 50%;
  									transform: translateY(-50%);
  		3.于此同时， 设置合适的内边距也可以实现垂直和水平居中。
  		4.flex布局对于实现垂直居中更加简洁方便。

综上， 我们根据设计稿得知，该任务属于知道height，那么我们只要按照2.2.a去写就好了。								



